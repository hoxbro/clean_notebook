[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "clean-notebook"
readme = "README.md"
license = "MIT"
description = "A simple package to clean Jupyter notebooks"
requires-python = ">=3.8"
keywords = ["clean", "jupyter", "notebook"]
dynamic = ["version"]
authors = [{ name = "Simon Hansen" }]
maintainers = [{ name = "Simon Hansen" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/hoxbro/clean_notebook"
Source = "https://github.com/hoxbro/clean_notebook"

[project.scripts]
clean-notebook = "clean_notebook.__main__:main"

[project.optional-dependencies]
dev = ["hatch", "pytest", "black", "ruff", "mypy", "pre-commit"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.fmt]
detached = true
scripts.run = "pre-commit run --all"
scripts.update = "pre-commit autoupdate"

[tool.hatch.envs.test]
dependencies = ["pytest", "pytest-github-actions-annotate-failures"]
scripts.run = "pytest tests"
matrix = [{ python = ["3.8", "3.9", "3.10", "3.11", "3.12"] }]

[tool.hatch.build]
sources = ["src"]

[tool.pytest.ini_options]
addopts = "-vv"

[tool.mypy]
python_version = "3.8"
files = ["src", "tests"]

strict = true

pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

implicit_reexport = true
namespace_packages = true
warn_return_any = false
warn_unreachable = true
disallow_untyped_decorators = false

[tool.ruff]
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "B",
    "C4",
    "C90",
    "E",
    "EM",
    "F",
    "FLY",
    "I",
    "ICN",
    "ISC",
    "PERF",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "RUF",
    "S",
    "SIM",
    "TCH",
    "TID",
    "UP",
    "W",
    "YTT",
]

ignore = [
    "E402", # Module level import not at top of file
    "E731", # Do not assign a lambda expression, use a def
    "E741", # Ambiguous variable name
    "PLR2004", # magic-value-comparison
]
extend-unsafe-fixes = [
    "F401", # unused imports
    "F841", # unused variables
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["clean_notebook"]
required-imports = ["from __future__ import annotations"]
